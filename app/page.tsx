'use client';

import React, { useState, useEffect } from 'react';
import { BottomSheet } from '@/components/BottomSheet';
import { TopBar } from '@/components/TopBar';
import { SearchBar } from '@/components/SearchBar';
import { AvatarItem, AvatarData } from '@/components/AvatarItem';
import { EmptyState } from '@/components/EmptyState';
import { LavaLamp } from '@/components/LavaLamp';
import { OnboardingText } from '@/components/OnboardingText';
import { ArrowRightIcon } from '@/components/icons';
import { avatarData } from '@/lib/data';
import { useBottomSheet } from '@/hooks/useBottomSheet';
import { useSearch } from '@/hooks/useSearch';

export default function Home() {
  const { isOpen: isBottomSheetOpen, open: openBottomSheet, close: closeBottomSheet } = useBottomSheet();
  const { searchValue, setSearchValue, clearSearch, filteredData: filteredAvatars } = useSearch(avatarData);
  const [isOnboardingOpen, setIsOnboardingOpen] = useState(false);
  const [isSearchActive, setIsSearchActive] = useState(false);

  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–∞
  useEffect(() => {
    const updateThemeColor = (color: string) => {
      const metaThemeColor = document.querySelector('meta[name="theme-color"]');
      if (metaThemeColor) {
        metaThemeColor.setAttribute('content', color);
      } else {
        const meta = document.createElement('meta');
        meta.name = 'theme-color';
        meta.content = color;
        document.head.appendChild(meta);
      }
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π —Ü–≤–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –ò –µ—Å–ª–∏ –ø–æ–∏—Å–∫ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
    if (isOnboardingOpen && !isSearchActive) {
      updateThemeColor('#B35EF5');
    } else {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–ª—ã–π —Ü–≤–µ—Ç –≤–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö
      updateThemeColor('#ffffff');
    }
  }, [isBottomSheetOpen, isOnboardingOpen, isSearchActive]);

  const handleOpenBottomSheet = () => {
    openBottomSheet();
  };

  const handleCloseBottomSheet = () => {
    closeBottomSheet();
    clearSearch(); // –û—á–∏—â–∞–µ–º –ø–æ–∏—Å–∫ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ - –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞
  };

  const handleAvatarClick = (avatar: AvatarData) => {
    console.log('Clicked avatar:', avatar.name);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∞–≤–∞—Ç–∞—Ä—É
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –ø–ª–∞—Ç–µ–∂–∞ –∏–ª–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  };

  const handleOnboardingClick = () => {
    setIsOnboardingOpen(true);
  };

  const handleCloseOnboarding = () => {
    setIsOnboardingOpen(false);
    // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ - –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
  const handleSearchChange = (value: string) => {
    setSearchValue(value);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –Ω–∞–≤—Å–µ–≥–¥–∞
    if (value.length > 0) {
      setIsSearchActive(true);
    }
    // –ù–µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–æ–ª—è - –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞
  };

  return (
    <div className="relative min-h-screen bg-white flex items-center justify-center">
      {/* –î–≤–µ –∫–Ω–æ–ø–∫–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞ */}
      <div className="flex gap-8">
        {/* –ö–Ω–æ–ø–∫–∞ –û–Ω–±–æ—Ä–¥–∏–Ω–≥ */}
        <div className="flex flex-col items-center gap-2">
          <button
            onClick={handleOnboardingClick}
            className="w-16 h-16 bg-white border border-gray-200 hover:bg-gray-50 rounded-full flex items-center justify-center transition-colors shadow-xl"
            aria-label="–û–Ω–±–æ—Ä–¥–∏–Ω–≥"
          >
            <ArrowRightIcon size={24} className="text-gray-800" />
          </button>
          <span className="text-gray-800 text-sm">–û–Ω–±–æ—Ä–¥–∏–Ω–≥</span>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—ã–π —é–∑–µ—Ä */}
        <div className="flex flex-col items-center gap-2">
          <button
            onClick={handleOpenBottomSheet}
            className="w-16 h-16 bg-white border border-gray-200 hover:bg-gray-50 rounded-full flex items-center justify-center transition-colors shadow-xl"
            aria-label="–°—Ç–∞—Ä—ã–π —é–∑–µ—Ä"
          >
            <ArrowRightIcon size={24} className="text-gray-800" />
          </button>
          <span className="text-gray-800 text-sm">–°—Ç–∞—Ä—ã–π —é–∑–µ—Ä</span>
        </div>
      </div>

      {/* Bottom Sheet –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ —é–∑–µ—Ä–∞ */}
      <BottomSheet isOpen={isBottomSheetOpen} onClose={handleCloseBottomSheet}>
        <TopBar onClose={handleCloseBottomSheet} />
        
        <SearchBar 
          value={searchValue}
          onChange={setSearchValue}
          autoFocus={true}
          isVisible={isBottomSheetOpen}
        />
        
        {/* –°–µ—Ç–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤ */}
        <div className="pt-6 pb-4 px-2">
          {filteredAvatars.length > 0 ? (
            <div className="grid grid-cols-4 gap-x-0 gap-y-0">
              {filteredAvatars.map((avatar, index) => (
                <AvatarItem
                  key={index}
                  data={avatar}
                  onClick={() => handleAvatarClick(avatar)}
                />
              ))}
            </div>
          ) : (
            <EmptyState
              icon="üîç"
              title="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
              description="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"
            />
          )}
        </div>
      </BottomSheet>

      {/* Bottom Sheet –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ */}
      <BottomSheet isOpen={isOnboardingOpen} onClose={handleCloseOnboarding}>
        <LavaLamp isSearchActive={isSearchActive} />
                <TopBar onClose={handleCloseOnboarding} variant={isSearchActive ? "default" : "onboarding"} />
        
        <SearchBar 
          value={searchValue}
          onChange={handleSearchChange}
          autoFocus={true}
          variant={isSearchActive ? "default" : "onboarding"}
          isVisible={isOnboardingOpen}
        />
        
                <OnboardingText isSearchActive={isSearchActive} />
        
        {/* –°–µ—Ç–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤ */}
        <div className="pt-6 pb-4 px-2">
          {filteredAvatars.length > 0 ? (
            <div className="grid grid-cols-4 gap-x-0 gap-y-0">
              {filteredAvatars.map((avatar, index) => (
                <AvatarItem
                  key={index}
                  data={avatar}
                  onClick={() => handleAvatarClick(avatar)}
                />
              ))}
            </div>
          ) : (
            <EmptyState
              icon="üîç"
              title="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
              description="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"
            />
          )}
        </div>
      </BottomSheet>
    </div>
  );
}
